Install QEMU:
"""""""""""""
https://www.assistedcoding.eu/2017/11/06/install-vx6-operating-system/

Install Requirements:
"""""""""""""""""""""
sudo apt-get install qemu-kvm qemu virt-manager virt-viewer libvirt-bin

Clone XV6:
""""""""""
git clone https://github.com/mit-pdos/xv6-public.git

Changing Directory:
"""""""""""""""""""
cd xv6-public/

Editing Makefile:
"""""""""""""""""
gedit Makefile
and change Line 54 from
# QEMU = qemu-system-i386
to
QEMU = qemu-system-x86_64

Compiling XV6:
""""""""""""""
make

Running XV6:
""""""""""""
make qemu-nox
or
make qemu

Quit XV6:
"""""""""
Crtl+a
c
quit

Recompile and Run:
""""""""""""""""""
make clean && make && make qemu-nox


Add a Simple Command:
"""""""""""""""""""""
https://viduniwickramarachchi.medium.com/how-to-add-a-user-program-to-xv6-1209069feee4

hello.c
"""""""
#include "types.h"
#include "stat.h"
#include "user.h"

int main(int argc, char *argv[]) {
  printf(1, "Hello! This is my first XV6 program.\n");
  exit();
}

Makefile:
"""""""""
Add _hello to UPROGS
Add hello.c to EXTRA


Add a Simple System Call:
"""""""""""""""""""""""""
https://www.geeksforgeeks.org/xv6-operating-system-adding-a-new-system-call/

syscall.h:
""""""""""
#define SYS_retint 22

syscall.c:
""""""""""
extern int sys_retint(void);
and
[SYS_retint]  sys_retint,

sysproc.c:
""""""""""
int
sys_retint()
{
  return 2022;
}

usys.S:
"""""""
SYSCALL(retint)

user.h:
"""""""
int retint(void);

retint.c:
"""""""""
#include "types.h"
#include "stat.h"
#include "user.h"

int main(int argc, char *argv[]) {
  printf(1, "%d\n", retint());
  exit();
}

Makefile:
"""""""""
Add _retint to UPROGS
Add retint.c to EXTRA


Add a System Call to Clear Console:
"""""""""""""""""""""""""""""""""""

syscall.h:
""""""""""
#define SYS_clear  23

syscall.c:
""""""""""
extern int sys_clear(void);
and
[SYS_clear]   sys_clear,

sysproc.c:
""""""""""
int
sys_clear()
{
  char clr[] = "\033[H\033[J";
  cprintf("%s", clr);
  return 1;
}

usys.S:
"""""""
SYSCALL(clear)

user.h:
"""""""
int clear(void);

clear.c:
""""""""
#include "types.h"
#include "stat.h"
#include "user.h"

int main(int argc, char *argv[]) {
  clear();
  exit();
}

Makefile:
"""""""""
Add _clear to UPROGS
Add clear.c to EXTRA


Add a System Call to Reverse a String:
""""""""""""""""""""""""""""""""""""""

syscall.h:
""""""""""
#define SYS_strrev 24

syscall.c:
""""""""""
extern int sys_strrev(void);
and
[SYS_strrev]  sys_strrev,

sysproc.c:
""""""""""
int
sys_strrev()
{
  int n = 0;
  char* s;
  char c;
  argptr(0, (void*)&s, sizeof(*s));
  cprintf("System: %s\n", s);
  for (n=0; s[n]; ++n)
    continue;
  for (int i=0; i!=(n/2); ++i) {
    c = s[i];
    s[i] = s[n-i-1];
    s[n-i-1] = c;
  }
  return n;
}

usys.S:
"""""""
SYSCALL(strrev)

user.h:
"""""""
int strrev(char*);

sndarg.c:
"""""""""
#include "types.h"
#include "stat.h"
#include "user.h"

int main(int argc, char *argv[]) {
  if (argc < 2) {
    printf(1, "Required argument missing\n");
    exit();
  }
  strrev(argv[1]);
  printf(1, "User: %s\n", argv[1]);
  exit();
}

Makefile:
"""""""""
Add _strrev to UPROGS
Add strrev.c to EXTRA

